/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        ctrl+s {
            bindings = <&kp LC(S)>;
            key-positions = <13 14>;
        };

        ctrl+z {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
        };

        ctrl+c {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
        };

        ctrl+v {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <20 21>;
        };

        apostrophe {
            bindings = <&kp SQT>;
            key-positions = <7 8>;
        };

        quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E                  &kp R        &kp T            &kp Y      &kp U  &kp I         &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D                  &kp F        &kp G            &kp H      &kp J  &kp K         &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C                  &kp V        &kp B            &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &none
                     &mt LEFT_ALT LEFT_GUI  &lt 1 ENTER  &kp BACKSPACE    &kp SPACE  &mo 2  &lt 3 DELETE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1                &kp N2            &kp N3          &kp N4                &kp N5            &kp N6          &kp N7                 &kp N8           &kp N9             &kp N0  &none
&none  &kp EXCLAMATION       &kp AT_SIGN       &kp HASH        &kp DOLLAR            &kp PERCENT       &kp CARET       &kp AMPERSAND          &kp ASTERISK     &trans             &trans  &none
&none  &kp NON_US_BACKSLASH  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp UNDERSCORE    &kp UNDERSCORE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans  &none
                                               &kp LGUI        &trans                &kp SPACE         &kp RET         &trans                 &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp GRAVE     &kp LS(GRAVE)  &trans    &trans  &bootloader    &trans   &kp LG(LEFT_ARROW)  &kp UP_ARROW    &kp LG(RIGHT_ARROW)  &trans  &none
&none  &kp CAPSLOCK  &trans         &trans    &trans  &trans         &trans   &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &trans  &none
&none  &kp PIPE      &trans         &trans    &trans  &trans         &trans   &trans              &trans          &trans               &trans  &none
                                    &kp LGUI  &trans  &kp SPACE      &kp RET  &trans              &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7  &kp F8  &kp F9  &kp F10          &trans
&trans  &trans  &trans  &trans  &trans  &kp F11    &kp F12  &trans  &trans  &trans  &kp PRINTSCREEN  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans           &trans
                        &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };
    };
};
